micronaut:
  server:
    port: 8085
  application:
    name: micronautTest
  executors:
    io:
      type: fixed
      nThreads: 75
  security:
    authentication: bearer
    intercept-url-map:
      - pattern: /**/swagger/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /**/swagger-ui/**
        httpMethod: GET
        access:
          - isAnonymous()
    token:
      jwt:
        generator:
          access-token:
            expiration: 86400
          refresh-token:
            secret: 'D$+NP$3RsyTa#3XvD^Pa@2jaR&=-?Z=g'
        signatures:
          secret:
            generator:
              secret: 'egJGEy!DXxCGPb2g?Vpbjksw=75EvxnL'
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**

netty:
  default:
    allocator:
      max-order: 3

datasources:
  default:
    url: jdbc:postgresql://localhost:5432/test
    username: postgres
    password: postgres
    dialect: POSTGRES
    schema-generate: NONE
    driverClassName: org.postgresql.Driver
    schema: micronaut_test

r2dbc:
  datasources:
    default:
      url: r2dbc:postgresql://localhost:5432/test?currentSchema=micronaut_test
      username: postgres
      password: postgres
      dialect: POSTGRES
      schema-generate: NONE

liquibase:
  datasources:
    default:
      change-log: classpath:database/changelog/liquibase-changelog.yml
      default-schema: public

jackson:
  date-format: yyyy-MM-dd HH:mm:ss

kafka:
  bootstrap:
    servers: localhost:9092
